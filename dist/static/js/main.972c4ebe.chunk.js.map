{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Dashboard.js","components/auth/SignIn.js","components/auth/SignUp.js","components/express/DeliverySummary.js","components/express/DeliveryList.js","components/express/history.js","store/actions/projectActions.js","components/projects/CreateProject.js","store/actions/deliveryActions.js","components/express/delivery.js","components/express/DeliveryDetail.js","App.js","registerServiceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/deliveryReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","SignedOutLinks","state","firebase","links","uid","Dashboard","this","projects","Component","compose","firestore","ordered","firestoreConnect","collection","SignIn","email","password","isSignedIn","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","GithubAuthProvider","EmailAuthProvider","FacebookAuthProvider","callbacks","signInSuccess","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","signIn","unregisterAuthObserver","onAuthStateChanged","user","authError","currentUser","displayName","src","photoURL","onSubmit","htmlFor","onChange","firebaseAuth","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","initials","DeliverySummary","deliveryProject","name","createdAt","toDate","toString","DeliveryList","delivery","map","key","history","createProject","project","add","authorFirstName","authorLastName","authorId","Date","CreateProject","title","content","push","deliveryExpress","PhoneNumber","other","destinationName","destinationPhoneNumber","destinationOther","engineer","science","architecture","it","agricultural","business","liberalArts","routePickup","routeDropoff","Card","CardBody","FormGroup","row","Col","sm","Label","for","Input","required","pattern","placeholder","check","CustomInput","label","ownProps","console","log","match","params","data","App","exact","path","component","DeliveryDetails","History","Delivery","isLocalhost","Boolean","window","location","hostname","register","navigator","URL","process","origin","addEventListener","swUrl","fetch","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","error","initState","authReducer","action","message","projectReducer","deliveryReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","document","getElementById","registerServiceWorker"],"mappings":"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","file":"static/js/main.972c4ebe.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/placeorder'>Place order</NavLink></li>\r\n        {/* <li><NavLink to='/create'>New Project</NavLink></li> */}\r\n        <li><NavLink to='/history'>History</NavLink></li>\r\n        <li><a onClick={props.signOut}>Log Out</a></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n      \r\n      firebase.auth().signInWithEmailAndPassword(\r\n        credentials.email,\r\n        credentials.password\r\n      ).then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  \r\n    }\r\n  }\r\n  \r\n  export const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n  \r\n      firebase.auth().signOut().then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n      });\r\n    }\r\n  }\r\n  \r\n  export const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n  \r\n      firebase.auth().createUserWithEmailAndPassword(\r\n        newUser.email, \r\n        newUser.password\r\n      ).then(resp => {\r\n        return firestore.collection('users').doc().set({\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName,\r\n          initials: newUser.firstName[0] + newUser.lastName[0]\r\n        });\r\n      }).then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err});\r\n      });\r\n    }\r\n  }","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/signup'>Signup</NavLink></li>\r\n        <li><NavLink to='/signin'>Login</NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n  const { auth } = props;\r\n  //console.log(auth);\r\n  const links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo \">KMITL Delivery</Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React, { Component } from 'react'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport Notifications from './Notifications'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    \r\n    // console.log(this.props);\r\n    const { projects, auth } = this.props;\r\n    if(!auth.uid) return <Redirect to='/signin'/>\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            {/* { <ProjectList projects={projects} /> } */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects' }\r\n  ])\r\n)(Dashboard)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport { Redirect } from 'react-router-dom'\r\n//import './index.css';\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    isSignedIn: false\r\n  }\r\n\r\n  // Configure FirebaseUI.\r\n  uiConfig = {\r\n    // Popup signin flow rather than redirect flow.\r\n    signInFlow: 'popup',\r\n    // We will display Google , Facebook , Etc as auth providers.\r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n      firebase.auth.GithubAuthProvider.PROVIDER_ID,\r\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n    ],\r\n    callbacks: {\r\n      // Avoid redirects after sign-in.\r\n      signInSuccess: () => false\r\n    }\r\n  };\r\n\r\n  // Listen to the Firebase Auth state and set the local state.\r\n  componentDidMount() {\r\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n      (user) => this.setState({ isSignedIn: !!user })\r\n    );\r\n  }\r\n\r\n  // Make sure we un-register Firebase observers when the component unmounts.\r\n  componentWillUnmount() {\r\n    this.unregisterAuthObserver();\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state)\r\n  }\r\n\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to='/' />\r\n    if (!this.state.isSignedIn) \r\n    {\r\n      return (\r\n        <div className=\"container\">\r\n          <form className=\"cyan darken-4\" onSubmit={this.handleSubmit}>\r\n            <h5 className=\"pink-text text-lighten-1\">Sign In</h5>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"email\" id='email' onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input type=\"password\" id='password' onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n              <div className=\"center red-text\">\r\n                {authError ? <p>{authError}</p> : null}\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <div className=\"container\">\r\n            <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} />\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>FirebaseUI-React</h1>\r\n        <h1> with Firebase Authentication</h1>\r\n        <p>Welcome {firebase.auth().currentUser.displayName}! You are now signed-in!</p>\r\n          <img id=\"photo\" className=\"pic\" src={firebase.auth().currentUser.photoURL}/>\r\n        <button onClick={() => firebase.auth().signOut()}>Sign-out</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  }\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to='/' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"cyan darken-4\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"pink-text text-lighten-1\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"center red-text\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=> {\r\n  return {\r\n    signUp: (creds) => dispatch(signUp(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React from 'react'\r\n\r\nconst DeliverySummary = ({deliveryProject}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title grey-text\">{deliveryProject.name}</span>\r\n        <p className=\"grey-text\">{deliveryProject.createdAt.toDate().toString()}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeliverySummary","import React from 'react'\r\nimport DeliverySummary from './DeliverySummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst DeliveryList = ({ delivery }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {delivery && delivery.map(deliveryProject => {\r\n        return (\r\n          <Link to={'/deliveryProject/' +deliveryProject.id}>\r\n            <DeliverySummary deliveryProject={deliveryProject} key={deliveryProject.id} />\r\n          </Link>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeliveryList","import React, { Component } from 'react'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport DeliveryList from '../express/DeliveryList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass history extends Component {\r\n  render() {\r\n    \r\n    // console.log(this.props);\r\n    const { delivery, auth } = this.props;\r\n    if(!auth.uid) return <Redirect to='/signin'/>\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <DeliveryList delivery={delivery} /> \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    delivery: state.firestore.ordered.delivery,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'delivery' }\r\n  ])\r\n)(history)","export const createProject = (project) => {\r\n  return (dispatch, getState, {getFirestore}) => {\r\n    // make async call to database\r\n    const firestore = getFirestore();\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: 'Net',\r\n      authorLastName: 'Ninja',\r\n      authorId: 12345,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\r\n    }).catch(err => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\r\n    });\r\n  }\r\n};","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='title' onChange={this.handleChange} />\r\n            <label htmlFor=\"title\">Project Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n            <label htmlFor=\"content\">Project Content</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const deliveryExpress = (deliveryProject) => {\r\n    return (dispatch, getState, {getFirestore}) => {\r\n      // make async call to database\r\n      const firestore = getFirestore();\r\n      firestore.collection('delivery').add({\r\n        ...deliveryProject,\r\n        createdAt: new Date()\r\n      }).then(() => {\r\n        dispatch({ type: 'CREATE_DELIVERY_SUCCESS' });\r\n      }).catch(err => {\r\n        dispatch({ type: 'CREATE_DELIVERY_ERROR' }, err);\r\n      });\r\n    }\r\n  };","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { deliveryExpress } from '../../store/actions/deliveryActions'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport { Container, Col, Row, Toast, ToastBody, ToastHeader, CustomInput } from 'reactstrap';\r\nimport {\r\n    Card, CardImg, CardTitle, CardText, CardColumns,\r\n    CardSubtitle, CardBody\r\n} from 'reactstrap';\r\n\r\n\r\nclass delivery extends Component {\r\n    state = {\r\n        name: '',\r\n        PhoneNumber: '',\r\n        other: '',\r\n        destinationName: '',\r\n        destinationPhoneNumber: '',\r\n        destinationOther: '',\r\n        engineer:'',\r\n        science:'',\r\n        architecture:'',\r\n        it:'',\r\n        agricultural:'',\r\n        business:'',\r\n        liberalArts:'',\r\n        routePickup:'',\r\n        routeDropoff:''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.deliveryExpress(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Card>\r\n                                <CardBody>\r\n                                    <FormGroup row>\r\n                                        <Col sm={10}>\r\n                                            <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                                                <Label for=\"pickUpLocation\">Pick up Location</Label>\r\n                                                <Input type=\"select\" name=\"text\" id=\"routePickup\" required>\r\n                                                    <option>--</option>\r\n                                                    <option id='engineer'>คณะวิศวกรรมศาสตร์</option>\r\n                                                    <option id='science'>คณะวิทยาศาสตร์</option>\r\n                                                    <option id='architecture'>คณะสถาปัตยกรรมศาสตร์</option>\r\n                                                    <option id='it'>คณะเทคโนโลยีสารสนเทศ</option>\r\n                                                    <option id='agricultural'>คณะเทคโนโลยีการเกษตร</option>\r\n                                                    <option id='business'>คณะบริหารธุรกิจ</option>\r\n                                                    <option id='liberalArts'>คณะศิลปศาสตร์</option>\r\n                                                </Input>\r\n\r\n                                                <div className=\"input-field\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        id='name'\r\n                                                        title=\"กรุณากรอกชื่อ\"\r\n                                                        required\r\n                                                        onChange={this.handleChange} />\r\n                                                    <label htmlFor=\"name\">Name</label>\r\n                                                </div>\r\n\r\n                                                <div className=\"input-field\">\r\n                                                    <input\r\n                                                        type=\"tel\"\r\n                                                        pattern=\"[0-9]{10}\"\r\n                                                        id='PhoneNumber'\r\n                                                        title=\"กรุณาใส่เบอร์โทรศัพท์ เป็นจำนวน 10 ตัวอักษร\"\r\n                                                        required\r\n                                                        onChange={this.handleChange} />\r\n                                                    <label htmlFor=\"PhoneNumber\">Phone Number</label>\r\n                                                </div>\r\n\r\n                                                <div className=\"input-field\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        id='other'\r\n                                                        title=\"เพิ่มเติม\"\r\n                                                        onChange={this.handleChange} />\r\n                                                    <label htmlFor=\"other\">Other</label>\r\n                                                </div>\r\n                                                <br />\r\n                                                <br />\r\n                                                <br />\r\n                                                <Label for=\"pickUpLocation\">Drop off Location</Label>\r\n                                                <Input type=\"select\" name=\"text\" id=\"routeDropoff\" placeholder=\"Drop off Location\" required>\r\n                                                    <option>--</option>\r\n                                                    <option id='engineer'>คณะวิศวกรรมศาสตร์</option>\r\n                                                    <option id='science'>คณะวิทยาศาสตร์</option>\r\n                                                    <option id='architecture'>คณะสถาปัตยกรรมศาสตร์</option>\r\n                                                    <option id='it'>คณะเทคโนโลยีสารสนเทศ</option>\r\n                                                    <option id='agricultural'>คณะเทคโนโลยีการเกษตร</option>\r\n                                                    <option id='business'>คณะบริหารธุรกิจ</option>\r\n                                                    <option id='liberalArts'>คณะศิลปศาสตร์</option>\r\n                                                </Input>\r\n\r\n                                                {/* <Label for=\"rout\">Delivery Info</Label> */}\r\n                                                <div className=\"input-field\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        id='destinationName'\r\n                                                        title=\"กรุณากรอกชื่อ\"\r\n                                                        required\r\n                                                        onChange={this.handleChange} />\r\n                                                    <label htmlFor=\"destinationName\">Name</label>\r\n                                                </div>\r\n\r\n                                                <div className=\"input-field\">\r\n                                                    <input\r\n                                                        type=\"tel\"\r\n                                                        pattern=\"[0-9]{10}\"\r\n                                                        id='destinationPhoneNumber'\r\n                                                        title=\"กรุณาใส่เบอร์โทรศัพท์ เป็นจำนวน 10 ตัวอักษร\"\r\n                                                        required\r\n                                                        onChange={this.handleChange} />\r\n                                                    <label htmlFor=\"destiantionPhoneNumber\">Phone Number</label>\r\n                                                </div>\r\n\r\n                                                <div className=\"input-field\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        id='destinationOther'\r\n                                                        title=\"เพิ่มเติม\"\r\n                                                        onChange={this.handleChange} />\r\n                                                    <label htmlFor=\"destinationOther\">Other</label>\r\n                                                </div>\r\n                                                <Label for=\"service\">ADDITIONAL SERVICES</Label>\r\n                                                <FormGroup check>\r\n                                                    <FormGroup>\r\n                                                        <div>\r\n                                                            <CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox\" label=\"Purchase Service\" />\r\n                                                            <CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox2\" label=\"Round Trip\" />\r\n                                                            <CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox3\" label=\"Food Delivery\" />\r\n                                                        </div>\r\n                                                    </FormGroup>\r\n                                                </FormGroup>\r\n                                                <button className=\"btn pink lighten-1\" >Save</button>\r\n                                            </form>\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        deliveryExpress: (deliveryProject) => dispatch(deliveryExpress(deliveryProject))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(delivery)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\nconst DeliveryDetails = (props) => {\r\n  const { deliveryProject } = props;\r\n  if (deliveryProject) {\r\n    return(\r\n    <div className=\"container section project-details\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">History Name: - {deliveryProject.name}</span>\r\n          <h5>Origin</h5>\r\n          <p className=\"grey-text\">Name: {deliveryProject.name}</p>\r\n          <p className=\"grey-text\">PhoneNumber: {deliveryProject.PhoneNumber}</p>\r\n          <p className=\"grey-text\">Other: {deliveryProject.other}</p>\r\n          <br/>\r\n          <h5>Destination</h5>\r\n          <p className=\"grey-text\">Name:{deliveryProject.destinationName}</p>\r\n          <p className=\"grey-text\">PhoneNumber: {deliveryProject.destinationPhoneNumber}</p>\r\n          <p className=\"grey-text\">Other: {deliveryProject.destinationOther}</p>\r\n        </div>\r\n        <div className=\"card-action \">\r\n          <div>History of {deliveryProject.name} </div>\r\n          Time: {deliveryProject.createdAt.toDate().toString()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading deliveryProject...</p>\r\n      </div>\r\n  )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  console.log(state);\r\n  const id = ownProps.match.params.id;\r\n  const delivery = state.firestore.data.delivery;\r\n  const deliveryProject = delivery ? delivery[id] : null\r\n  return {\r\n    deliveryProject: deliveryProject\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'delivery' }\r\n  ])\r\n)(DeliveryDetails)","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport History from './components/express/history'\nimport CreateProject from './components/projects/CreateProject'\nimport Delivery from './components/express/delivery'\nimport DeliveryDetails from './components/express/DeliveryDetail'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/'component={Dashboard} />\n            <Route path='/deliveryProject/:id' component={DeliveryDetails} />\n            <Route path='/history' component={History} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            {/* <Route path='/create' component={CreateProject} /> */}\n            <Route path='/Placeorder' component={Delivery} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","const initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch(action.type){\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error');\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      }\r\n\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success');\r\n      return state;\r\n\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success')\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error')\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default authReducer;","const initState = {}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT_SUCCESS':\r\n      console.log('create project success');\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error');\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;","const initState = {}\r\n\r\nconst deliveryReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_DELIVERY_SUCCESS':\r\n      console.log('create delivery success');\r\n      return state;\r\n    case 'CREATE_DELIVERY_ERROR':\r\n      console.log('create delivery error');\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default deliveryReducer;","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport deliveryReducer from './deliveryReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  deliveryProject: deliveryReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer\r\n\r\n// the key name will be the data property on the state object","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Replace this with your own config details\r\nvar config = {\r\n  apiKey: \"AIzaSyAk1xZwWvS9eTDJfaqrjp40uNg7ScL1FGM\",\r\n  authDomain: \"web-project-softdev-dacde.firebaseapp.com\",\r\n  databaseURL: \"https://web-project-softdev-dacde.firebaseio.com\",\r\n  projectId: \"web-project-softdev-dacde\",\r\n  storageBucket: \"web-project-softdev-dacde.appspot.com\",\r\n  messagingSenderId: \"318588599821\",\r\n  appId: \"1:318588599821:web:de6c113fa8432c0c845f44\"\r\n};\r\nfirebase.initializeApp(config);\r\n//firebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reactReduxFirebase(fbConfig, {attachAuthIsReady: true}), // redux binding for firebase\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  registerServiceWorker();\n});"],"sourceRoot":""}